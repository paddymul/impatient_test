


* demo project
make it super quick to get impatient test setup and running


* deficienies

** testsCases in the abstract

current implementation is too tied to string based representation of
tests

we need access to the test functions themselves, so that annotations
work properly

** no way to run some tests with mysql, some without

need mysql test_database_name enumerator, this should be done via
environment variables or sys.argv parsing 

** we don't capture test output
simple to fix, should do

** faster testing still
*** we should run all tests that don't require the database in one process
basically any testcase that doesn't extend django.test.TestCase
these require no database usage so they should run ultra-fast, 

*** box packing for tests
use rlimit to find tests that use less cpu time than they take to run,
these are good candidates for parallelization

this requires storing test insturmentation info between runs



** better way of reporting test results
I need to be able to grab a datastructure report of which tests
failed,
this way I can run all of the non_database tests in their own process,
and they will only suffer the python stratup penalty once


** custom testrunner
seems like all the cool kids are doing it,  we want to change the
summary messages that the standard test runner displays. it is
confusing seeing 30 "1 test failed" messages


** sql catching/fixtures

** add options to i_test command

run a smaller number of tests

test only specific apps

display all test output

add default database setting
so that you mark mysql tests or sqlite3 tests, but not both

